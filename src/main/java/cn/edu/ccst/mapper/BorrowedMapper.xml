<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ccst.mapper.BorrowedMapper">

    <update id="BorrowAgain">
        update tb_borrowed set return_date = #{returnDate}
        where user_id = #{userId}
    </update>


    <update id="BorrowReturn">
        delete from tb_borrowed where user_id = #{userId} and book_id = #{bookId}
    </update>


    <update id="BorrowBook">
        update tb_borrowed
        set
            book_id =#{bookId},
            user_id=#{userId},
            borrow_date=#{borrowDate},
            return_date=#{returnDate}
</update>

    <select id="queryBorrowsOfUser" resultType="cn.edu.ccst.model.Borrowed">
     select * from tb_borrowed where book_id = #{bookId}
    </select>


    <select id="queryOneBorrowed" resultType="cn.edu.ccst.model.Borrowed">
    select * from tb_borrowed where user_id=#{arg0} and book_id = #{arg1}
    </select>


    <select id="queryAllBorrows" resultType="cn.edu.ccst.model.Borrowed">
        select * from tb_borrowed
    </select>
    <select id="queryBorrowedsOfUser" resultType="cn.edu.ccst.model.Borrowed">


    </select>
    <select id="queryBorrowedsOfBook" resultType="cn.edu.ccst.model.Borrowed">

    </select>
    <select id="queryAllBooksByWhere" resultType="cn.edu.ccst.model.Book">

    </select>
    <select id="queryBorrowedsByUser2Book" resultType="cn.edu.ccst.model.Borrowed">
        a.user_id AS user_id,
        a.book_id AS book_id,
        a.borrow_date AS borrow_date,
        a.return_date AS return_date,
        b.name AS user_name,
        c.name AS book_name,
        c.type AS book_type,
        c.author AS book_author,
        c.publisher AS book_publisher,
        c.price AS book_price
    FROM
        tb_borrowed a,
        tb_user b,
        tb_book c
    WHERE
        a.user_id = b.id
        AND a.book_id = c.id
        AND a.book_id = #{bookId}
    </select>
</mapper>